\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}string\PYGZgt{}}

\PYG{k+kt}{void} \PYG{n+nf}{new\PYGZus{}line}\PYG{p}{();}

\PYG{k+kt}{int} \PYG{n+nf}{main}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
	\PYG{n}{string} \PYG{n}{first\PYGZus{}name}\PYG{p}{,} \PYG{n}{last\PYGZus{}name}\PYG{p}{,} \PYG{n}{record\PYGZus{}name}\PYG{p}{;}
	\PYG{n}{string} \PYG{n}{motto} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}Your records are our records.\PYGZdq{}}\PYG{p}{;}

	\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}Enter your first and last name:}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
	\PYG{n}{cin} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{first\PYGZus{}name} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{last\PYGZus{}name}\PYG{p}{;} \PYG{c+c1}{// Reads in first and last name separated by whitespace}

	\PYG{n}{new\PYGZus{}line}\PYG{p}{();} \PYG{c+c1}{// call to function \PYGZsq{}new\PYGZus{}line\PYGZsq{}}

	\PYG{c+c1}{//String concatenation and assignment works with overloaded operators}
	\PYG{n}{record\PYGZus{}name} \PYG{o}{=} \PYG{n}{last\PYGZus{}name} \PYG{o}{+} \PYG{l+s}{\PYGZdq{}, \PYGZdq{}} \PYG{o}{+} \PYG{n}{first\PYGZus{}name}\PYG{p}{;}

	\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}Please suggest a better motto:}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
	\PYG{n}{getline}\PYG{p}{(}\PYG{n}{cin}\PYG{p}{,} \PYG{n}{motto}\PYG{p}{);} \PYG{c+c1}{// read in new string from keyboard and assign it to motto}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{new\PYGZus{}line}\PYG{p}{()}
\PYG{p}{\PYGZob{}}
	\PYG{k+kt}{char} \PYG{n}{next\PYGZus{}char}\PYG{p}{;} \PYG{c+c1}{//declare a character variable}
	\PYG{k}{do}
   	 \PYG{p}{\PYGZob{}}
		\PYG{n}{cin}\PYG{p}{.}\PYG{n}{get}\PYG{p}{(}\PYG{n}{next\PYGZus{}char}\PYG{p}{);} \PYG{c+c1}{// gets some character until the character}
		\PYG{c+c1}{//is the new line character}
	\PYG{p}{\PYGZcb{}} \PYG{k}{while} \PYG{p}{(}\PYG{n}{next\PYGZus{}char} \PYG{o}{!=} \PYG{l+s+sc}{\PYGZsq{}\PYGZbs{}n\PYGZsq{}}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
